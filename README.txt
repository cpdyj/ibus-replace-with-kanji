# ひらがなIME for IBus<br>&mdash; ￹日本語￺にほんご￻ ￹漢字￺かんじ￻￹置換￺ちかん￻インプット メソッド &mdash;

　「ひらがなIME」は、かながきする￹部分￺ぶぶん￻のおおくなった￹日本語￺にほんご￻を￹入力￺にゅうりょく￻しやすくした￹日本語￺にほんご￻インプット メソッドです。
Fedora、Ubuntu、Raspberry Pi￹用￺よう￻のRaspbianなど、[IBus](https://github.com/ibus/ibus/wiki)に￹対応￺たいおう￻したオペレーティング システム（OS）で￹利用￺りよう￻できます。

　これまでの￹日本語￺にほんご￻IMEとちがって、「ひらがなIME」には「よみの￹入力￺にゅうりょく￻モード」がありません。
ですから、ひらがなを￹入力￺にゅうりょく￻するのに、いちいち〔￹確定￺かくてい￻〕キーや〔￹無変換￺むへんかん￻〕キーなどをおす￹必要￺ひつよう￻がありません。
￹文中￺ぶんちゅう￻のひらがなの￹部分￺ぶぶん￻は、あとから、いつでも￹漢字￺かんじ￻におきかえることができます。

#### 「ひらがなIME」に￹対応￺たいおう￻しているアプリケーション ソフトウェア

　「ひらがなIME」は、IBusの[￹周辺￺しゅうへん￻テキストAPI](http://ibus.github.io/docs/ibus-1.5/IBusEngine.html#ibus-engine-get-surrounding-text)を￹応用￺おうよう￻した、あたらしい￹入力￺にゅうりょく￻￹方式￺ほうしき￻です。
GNOMEの￹標準￺ひょうじゅん￻のテキスト エディターgeditや「[ふりがなパッド](https://github.com/esrille/furiganapad)」は￹周辺￺しゅうへん￻テキストAPIに￹対応￺たいおう￻しています。
また、LibreOffice Writerも￹最新版￺さいしんばん￻などは￹周辺￺しゅうへん￻テキストAPIに￹対応￺たいおう￻しています。

　けれども、￹周辺￺しゅうへん￻テキストAPIにまだ￹対応￺たいおう￻できていないアプリケーション ソフトウェアもあります。
そのようなソフトでは、￹直前￺ちょくぜん￻に￹入力￺にゅうりょく￻した￹文字列￺もじれつ￻だけを￹漢字￺かんじ￻に￹変換￺へんかん￻できます（カーソルを￹移動￺いどう￻してあとから￹漢字￺かんじ￻に￹変換￺へんかん￻したりすることはできません）。

## 「ひらがなIME」のインストール￹方法￺ほうほう￻
　つかっているOSが、Fedora, Ubuntu, Raspbianのどれかであれば、インストール￹用￺よう￻のソフトウェア パッケージを「[Releases](https://github.com/esrille/ibus-replace-with-kanji/releases)」ページからダウンロードできます。

　インストールができたら、「IBusの￹設定￺せってい￻(IBus Preferences)」の「￹入力￺にゅうりょく￻メソッド(Input Method)」タブで、

![アイコン](icons/ibus-replace-with-kanji.png) ￹日本語￺にほんご￻(Japanese) - ReplaceWithKanji

を￹選択￺せんたく￻してください。

※ 「ひらがなIME」をじぶんでビルドしてインストールしたいときは、つぎの￹手順￺てじゅん￻でインストールできます。
```
$ ./autogen.sh
$ make
$ sudo make install
$ ibus restart
```

## ￹基本的￺きほんてき￻なつかいかた

![￹漢字￺かんじ￻を￹入力￺にゅうりょく￻しているときのようす](screenshot.png)

### ￹入力￺にゅうりょく￻モード

　「ひらがなIME」には、３つの￹入力￺にゅうりょく￻モードがあります。
￹現在￺げんざい￻の￹入力￺にゅうりょく￻モードは、￹画面￺がめん￻うえがわのトップバーのなかに￹表示￺ひょうじ￻されます。
ふだんよくつかうのは、「ひらがなモード」と「￹英￺えい￻￹数￺すう￻モード」です。

￹入力￺にゅうりょく￻モードの￹表示￺ひょうじ￻ | モードのなまえ | ￹解説￺かいせつ￻
---|---|---
あ | ひらがなモード | ひらがなを￹入力￺にゅうりょく￻するモードです。<br>※ かな￹漢字￺かんじ￻まじり￹文￺ぶん￻を￹入力￺にゅうりょく￻するときは、このモードにします。
A | ￹英￺えい￻￹数￺すう￻モード | アルファベットや￹数字￺すうじ￻を￹入力￺にゅうりょく￻するモードです。
ア | カタカナ モード | ちょくせつカタカナを￹入力￺にゅうりょく￻するモードです。

### ￹漢語￺かんご￻やカタカナのことばの￹入力￺にゅうりょく￻

　たとえば、「しろうとむけのワープロの￹登場￺とうじょう￻を￹期待￺きたい￻したいですね。」という￹文￺ぶん￻を￹入力￺にゅうりょく￻するには、つぎのようにキーボードをうちます。
```
しろうとむけのわーぷろ〔変換〕のとうじょう〔変換〕をきたい〔変換〕したいですね。
```
　￹漢字￺かんじ￻やカタカナの￹部分￺ぶぶん￻は、まずはひらがなで￹入力￺にゅうりょく￻します。
そのあとで、〔￹変換￺へんかん￻〕キーをおせば、￹漢字￺かんじ￻やカタカナにおきかえることができます。

※ ￹漢字￺かんじ￻やカタカナにするときは、カーソルがその￹部分￺ぶぶん￻のまうしろにないといけません。

### おくりがなつきの￹変換￺へんかん￻

　￹動詞￺どうし￻や￹形容詞￺けいようし￻など、￹活用￺かつよう￻する￹和語￺わご￻を￹漢字￺かんじ￻で￹入力￺にゅうりょく￻したいときは、おくりがなをおくる￹位置￺いち￻を￹指定￺してい￻して￹変換￺へんかん￻します。
おくりがなをおくる￹位置￺いち￻は、￹水平￺すいへい￻バー「―」を￹入力￺にゅうりょく￻して￹指定￺してい￻します。
￹水平￺すいへい￻バー「―」は、￹左￺ひだり￻〔Shift〕キーを￹単独￺たんどく￻でおすと￹入力￺にゅうりょく￻できます。

￹例￺れい￻)
* おく―〔変換〕 → 送，贈，後，遅
* おく―る〔変換〕 → 送る，贈る

　この￹例￺れい￻のように、￹活用￺かつよう￻することばは、おくりがなをふくめて￹変換￺へんかん￻すると、￹漢字￺かんじ￻の￹候補￺こうほ￻をしぼることができます。

### よみの￹短縮￺たんしゅく￻

　「ひらがなIME」は、ひらがなを￹漢字￺かんじ￻やカタカナに￹変換￺へんかん￻するとき、はじめは、よみのながい￹単語￺たんご￻を￹優先￺ゆうせん￻するようになっています。
そのため、「￹生￺い￻きがい￹論￺ろん￻」と￹入力￺にゅうりょく￻したいときに、

    生きがいろん〔変換〕

とタイプすると、よみとして「がいろん」がえらばれて、

    生き概論

のようになります。
このようなばあいは、よみをみじかくするようにします。
よみは、〔Tab〕キーをおすとみじかくできます。

　じっさいに〔Tab〕キーをおすと、よみが「いろん」に￹短縮￺たんしゅく￻されて、

    生きが異論

にかわります。さらに、もういちど、〔Tab〕キーをおすと、よみが「ろん」に￹短縮￺たんしゅく￻されて、

    生きがい論

と￹目的￺もくてき￻の「￹生￺い￻きがい￹論￺ろん￻」を￹入力￺にゅうりょく￻できます。

※ よみの￹短縮￺たんしゅく￻も￹辞書￺じしょ￻の￹学習￺がくしゅう￻￹結果￺けっか￻とおなじように￹保存￺ほぞん￻されます。

## キーのわりあて

キーのわりあては、つぎようになっています。

￹日本語￺にほんご￻キーボード | ￹英語￺えいご￻キーボード | ￹操作￺そうさ￻の￹内容￺ないよう￻
---|---|---
〔￹英￺えい￻￹数￺すう￻〕 | 〔Caps Lock〕 | ￹英￺えい￻￹数￺すう￻/かなモードのきりかえ
〔￹変換￺へんかん￻〕|〔スペース〕| ￹変換￺へんかん￻￹開始￺かいし￻，￹次￺つぎ￻の￹候補￺こうほ￻
〔↓〕 | 〔↓〕 | ￹次￺つぎ￻の￹候補￺こうほ￻
〔↑〕または〔￹無変換￺むへんかん￻〕|〔↑〕または〔Shift〕-〔スペース〕| ￹前￺まえ￻の￹候補￺こうほ￻
〔Tab〕 | 〔Tab〕 | よみの￹短縮￺たんしゅく￻
〔Enter〕 | 〔Enter〕 |  ￹変換￺へんかん￻￹候補￺こうほ￻の￹確定￺かくてい￻（つづきの￹文￺ぶん￻を￹入力￺にゅうりょく￻していけば、〔Enter〕をおさなくても￹自動的￺じどうてき￻に￹確定￺かくてい￻します）
〔Esc〕 | 〔Esc〕 | ￹変換￺へんかん￻￹候補￺こうほ￻の￹選択￺せんたく￻をとりけして、ひらがなにもどす<br>￹入力￺にゅうりょく￻しかけのローマ￹字￺じ￻のとりけし
〔Page Up〕, 〔Page Down〕 | 〔Page Up〕, 〔Page Down〕 | ￹変換￺へんかん￻￹候補￺こうほ￻ウィンドウのページのきりかえ
〔カタカナ〕| ￹右￺みぎ￻〔Ctrl〕| カタカナ￹置換￺ちかん￻（カーソルのてまえのかな￹文字￺もじ￻をまえにむかって一￹文字￺もじ￻ずつカタカナに￹置換￺ちかん￻していきます）
〔Shift〕-〔カタカナ〕|〔Shift〕-￹右￺みぎ￻〔Ctrl〕| カタカナ/ひらがなモードのきりかえ
￹左￺ひだり￻〔Shift〕| ￹左￺ひだり￻〔Shift〕| おくりがなをおくる￹位置￺いち￻の￹指定￺してい￻

* ￹変換￺へんかん￻￹候補￺こうほ￻ウィンドウは￹候補￺こうほ￻がふたつ￹以上￺いじょう￻あるばあいにだけ￹表示￺ひょうじ￻されます。
* ￹数字￺すうじ￻キーをつかって、￹変換￺へんかん￻￹候補￺こうほ￻ウィンドウから￹候補￺こうほ￻を￹選択￺せんたく￻することはできません（￹数字￺すうじ￻をうつと、そのまま￹数字￺すうじ￻が￹入力￺にゅうりょく￻されます）。
* ￹漢字￺かんじ￻の￹誤変換￺ごへんかん￻は、テキスト エディターやワープロのアンドゥ（とりけし）をつかって、ひらがなにもどすことができます。

## キーボード￹配列￺はいれつ￻の￹設定￺せってい￻
　「ひらがなIME」には、キーボードの￹配列￺はいれつ￻をこのみにあわせて￹変更￺へんこう￻する￹機能￺きのう￻があります。はじめから￹対応￺たいおう￻しているキーボード￹配列￺はいれつ￻には、つぎのものがあります。

キーボード￹配列￺はいれつ￻ | ￹設定￺せってい￻ファイル￹名￺めい￻ | ￹解説￺かいせつ￻
------------ | ------------- | -------------
[99￹式￺しき￻ローマ￹字￺じ￻](http://esrille.github.io/ibus-replace-with-kanji/layouts.html#roomazi) | roomazi.json<br>roomazi.109.json | 　￹最初￺さいしょ￻に￹設定￺せってい￻されている￹配列￺はいれつ￻です。￹基本￺きほん￻￹部分￺ぶぶん￻は￹訓令￺くんれい￻￹式￺しき￻とおなじです。<br>　「[99￹式￺しき￻](http://www.hokkajda-esp-ligo.jp/jp/ATruby/99siki-Roomazi.htm)」は、￹梅棹￺うめさお￻￹忠夫￺ただお￻さんが￹会長￺かいちょう￻をつとめた￹日本￺にっぽん￻ローマ￹字￺じ￻￹会￺かい￻がさだめたローマ￹字￺じ￻による￹日本語￺にほんご￻の￹表記法￺ひょうきほう￻です。のばす￹音￺おん￻をあらわすのに、ōのような￹長音￺ちょうおん￻￹記号￺きごう￻はつかいません。これまでワープロでつかってきたような「ふりがな￹方式￺ほうしき￻」をつかうようになっています。
[JISかな￹配列￺はいれつ￻](http://esrille.github.io/ibus-replace-with-kanji/layouts.html#jis) | jis.109.json | 　￹現在￺げんざい￻の￹標準的￺ひょうじゅんてき￻な￹日本語￺にほんご￻キーボードのかな￹配列￺はいれつ￻です。<br>　この￹配列￺はいれつ￻は、かなタイプライター￹用￺よう￻にバーナム・クース・スティックニーさんがデサインした￹配列￺はいれつ￻がもとになっています。もともとは、4￹段￺だん￻10￹列￺れつ￻のキーなかにすべてのかな￹文字￺もじ￻がおさまっていました。￹現在￺げんざい￻は、よこながの4￹段￺だん￻12￹列￺れつ￻という、すこしつかいにくい￹配列￺はいれつ￻になっています。これは、一￹台￺だい￻のタイプライターで￹英￺えい￻￹文字￺もじ￻もかな￹文字￺もじ￻もうてるようにしたりした￹歴史￺れきし￻￹的￺てき￻な￹事情￺じじょう￻によるものです。
[ニュー スティックニー￹配列￺はいれつ￻](http://esrille.github.io/ibus-replace-with-kanji/layouts.html#new_stickney) | new_stickney.json<br>new_stickney.109.json | 　ローマ￹字￺じ￻になれていない￹小学生￺しょうがくせい￻にもおぼえやすいかな￹配列￺はいれつ￻として￹研究￺けんきゅう￻￹中￺ちゅう￻のかな￹配列￺はいれつ￻です。3￹段￺だん￻10￹列￺れつ￻のキーなかにすべてのかな￹文字￺もじ￻をおさめています。スティックニーさんが￹考案￺こうあん￻した￹配列￺はいれつ￻のデサイン￹手法￺しゅほう￻をつかって、コンピューターで￹設計￺せっけい￻しています。

　ファイル￹名￺めい￻に.109がふくまれているものは、￹日本語￺にほんご￻キーボード￹用￺よう￻です。￹配列￺はいれつ￻の￹内容￺ないよう￻はJSONでかかれています。￹通常￺つうじょう￻のテキスト エディターをつかって、まったくあたらしい￹配列￺はいれつ￻を￹定義￺ていぎ￻してつかうこともできます。

　キーボード￹配列￺はいれつ￻を￹変更￺へんこう￻したいときは、IBus configの、

    engine/replace-with-kanji-python:layout

に￹上記￺じょうき￻の￹設定￺せってい￻ファイル￹名￺めい￻をフルパス￹名￺めい￻で￹指定￺してい￻します。

￹例￺れい￻ (インストール￹先￺さき￻が /usr のばあい) :

    /usr/share/ibus-replace-with-kanji/layouts/roomazi.json

IBus configの￹設定￺せってい￻は、dconf-editorをつかうばあいは、

    /desktop/ibus

から￹変更￺へんこう￻できます。

![dconf-editor](dconf-editor.png)

　￹設定￺せってい￻を￹変更￺へんこう￻すると、￹自動的￺じどうてき￻に「ひらがなIME」のキーボード￹配列￺はいれつ￻に￹反映￺はんえい￻されます。

#### ￹漢数字￺かんすうじ￻の￹入力￺にゅうりょく￻

　キーボード￹配列￺はいれつ￻として「99式ローマ字」もしくは「ニュー スティックニー￹配列￺はいれつ￻」を￹選択￺せんたく￻しているときは、〔\〕キーのあとに￹数字￺すうじ￻キーをおすと￹漢数字￺かんすうじ￻を￹入力￺にゅうりょく￻できます。

￹例￺れい￻)
- \1 → 一
- \2 → 二

## ￹辞書￺じしょ￻ファイルについて

※ ￹辞書￺じしょ￻の￹学習￺がくしゅう￻￹結果￺けっか￻は、ディレクトリ ~/.local/share/ibus-replace-with-kanji/ のなかに￹保存￺ほぞん￻されます。

### システム￹辞書￺じしょ￻

　つぎの￹漢字￺かんじ￻￹辞書￺じしょ￻ファイルをあらかじめ￹用意￺ようい￻しています。

￹設定￺せってい￻ファイル名 | ￹解説￺かいせつ￻
------------ | -------------
restrained.dic | ￹最初￺さいしょ￻に￹設定￺せってい￻されている￹辞書￺じしょ￻。￹常用￺じょうよう￻￹漢字￺かんじ￻を￹基本￺きほん￻に￹構成￺こうせい￻した￹辞書￺じしょ￻です。
restrained.1.dic | ￹小学校￺しょうがっこう￻1￹年￺ねん￻￹生￺せい￻￹用￺よう￻。
restrained.2.dic | ￹小学校￺しょうがっこう￻2￹年￺ねん￻￹生￺せい￻￹用￺よう￻。
restrained.3.dic | ￹小学校￺しょうがっこう￻3￹年￺ねん￻￹生￺せい￻￹用￺よう￻。
restrained.4.dic | ￹小学校￺しょうがっこう￻4￹年￺ねん￻￹生￺せい￻￹用￺よう￻。
restrained.5.dic | ￹小学校￺しょうがっこう￻5￹年￺ねん￻￹生￺せい￻￹用￺よう￻。
restrained.6.dic | ￹小学校￺しょうがっこう￻6￹年￺ねん￻￹生￺せい￻￹用￺よう￻。
restrained.7.dic | ￹中学生￺ちゅうがくせい￻￹用￺よう￻。
restrained.9.dic | ￹許容￺きょよう￻されているおくりがなをつかうための￹辞書￺じしょ￻。

　￹小中学生￺しょうちゅうがくせい￻￹用￺よう￻の￹辞書￺じしょ￻では、￹使用￺しよう￻する￹漢字￺かんじ￻とそのよみを、￹平成￺へいせい￻29￹年￺ねん￻の『[￹音訓￺おんくん￻の￹小￺しょう￻・￹中￺ちゅう￻・￹高等学校￺こうとうがっこう￻￹段階￺だんかい￻￹別￺べつ￻￹割￺わ￻り￹振￺ふ￻り￹表￺ひょう￻](http://www.mext.go.jp/a_menu/shotou/new-cs/1385768.htm)』にそって￹限定￺げんてい￻してあります。

　￹標準￺ひょうじゅん￻の￹辞書￺じしょ￻(restrained.dic)では、おくる￹位置￺いち￻が『[￹送￺おく￻り￹仮名￺かな￻の￹付￺つ￻け￹方￺かた￻](http://www.bunka.go.jp/kokugo_nihongo/sisaku/joho/joho/kijun/naikaku/okurikana/index.html)』の￹原則￺げんそく￻にそっていないと￹活用￺かつよう￻を￹変換￺へんかん￻できません。
￹辞書￺じしょ￻にrestrained.9.dicを￹指定￺してい￻すると、￹許容￺きょよう￻されているおくりがなのおくりかたでも￹活用￺かつよう￻を￹変換￺へんかん￻できるようになります。

￹例￺れい￻)  restrained.9.dicをつかうと、「￹落￺おと￻す」のような￹変換￺へんかん￻もできます。

    お―とす〔変換〕 → 落とす
    おと―す〔変換〕 → 落す

　￹使用￺しよう￻する￹辞書￺じしょ￻を￹変更￺へんこう￻するときは、IBus configの、

    engine/replace-with-kanji-python:dictionary

に￹上記￺じょうき￻の￹設定￺せってい￻ファイル￹名￺めい￻をフルパス￹名￺めい￻で￹指定￺してい￻してください。

￹例￺れい￻ (インストール￹先￺さき￻が /usr のばあい) :

    /usr/share/ibus-replace-with-kanji/restrained.dic

### ￹個人￺こじん￻￹用￺よう￻￹辞書￺じしょ￻

　システムの￹辞書￺じしょ￻ファイルにない￹単語￺たんご￻は、￹個人￺こじん￻￹用￺よう￻の￹辞書￺じしょ￻ファイルにいれておくことができます。￹個人￺こじん￻￹用￺よう￻の￹辞書￺じしょ￻は、ディレクトリ ~/.local/share/ibus-replace-with-kanji/ のなかの my.dic というなまえのファイルです。￹追加￺ついか￻した￹単語￺たんご￻は、￹次回￺じかい￻IBusデーモンを￹起動￺きどう￻したときから、つかえるようになります。IBusデーモンは、コマンド ラインからは、
```
$ ibus restart
```
で￹再￺さい￻￹起動￺きどう￻できます。

　￹辞書￺じしょ￻ファイルには、つぎのテキスト￹形式￺けいしき￻で￹単語￺たんご￻を￹保存￺ほぞん￻します。

```
; コメント
; よみ /単語/
きれい /綺麗/
; よみ /単語1/単語2/
こーひー /珈琲/咖啡/
; 用言のよみは、おくりがなの手前まで指定して水平バーでとめます。
; 漢字は、5段活用動詞は、最後にkgstnbmrwをつけます(kは、カ行をしめします)。
ささや― /囁k/
; 形容詞は、最後にiをつけます。
あお― /碧i/
```

## ￹実験的￺じっけんてき￻な￹機能￺きのう￻

　「ひらがなIME」は、たしょう￹実験的￺じっけんてき￻な￹機能￺きのう￻も￹実装￺じっそう￻しています。￹将来￺しょうらい￻のバージョンでは、これらの￹機能￺きのう￻は￹変更￺へんこう￻したり、￹削除￺さくじょ￻したりするかもしれません。

### ￹和語￺わご￻の一￹音￺おん￻の￹動詞￺どうし￻と￹漢字￺かんじ￻

　「￹煮￺に￻る」と「￹似￺に￻る」のように、一￹音￺おん￻で、￹漢字￺かんじ￻をもちいないと￹意味￺いみ￻が￹判別￺はんべつ￻しにくい￹動詞￺どうし￻があります。
こうした￹動詞￺どうし￻は、よみから￹漢字￺かんじ￻に￹変換￺へんかん￻する￹方式￺ほうしき￻では￹誤変換￺ごへんかん￻をおこしがちです。

　「ひらがなIME」には、こうした￹漢字￺かんじ￻をキーボードからちょくせつ￹入力￺にゅうりょく￻する￹機能￺きのう￻があります。
￹入力￺にゅうりょく￻できる￹漢字￺かんじ￻は、￹下記￺かき￻の￹表￺ひょう￻のA，B，C￹列￺れつ￻の￹漢字￺かんじ￻です。

￹音￺おん￻ | A | B | C | かな￹優先￺ゆうせん￻
-- | -- | -- | -- | --
い | 射 \i | 生 \xi | | (入)
う | 売 \u | | | (得)
え | 得 \e | | | (獲)
お | 負 \o | 織 \xo | | (追)，(折)
か | 買 \ka | 飼 \ga | 欠 \xka ，く | (書)
き | 着 \ki | 切 \gi
た | 裁 \ta | | |(断)
と | 解 \to | 説 \do
に | 似 \ni | 煮 \xni
\ | ￥ \ \ |

　ローマ￹字￺じ￻￹入力￺にゅうりょく￻のばあいは、〔\〕キー を￹前置￺ぜんち￻キーとして、

* \ki → 着
* \gi → 切

のようにタイプすると、￹対応￺たいおう￻する￹漢字￺かんじ￻をちょくせつ￹入力￺にゅうりょく￻できます。

　かな￹入力￺にゅうりょく￻のばあい、 A，B，C￹列￺れつ￻の￹漢字￺かんじ￻は、〔\〕キー もしくは〔￹半角￺はんかく￻/￹全角￺ぜんかく￻〕キーにつづけて、それぞれつぎのようにタイプして￹入力￺にゅうりょく￻します。

* A￹列￺れつ￻: ￹音￺おん￻のまま、かなをタイプ
* B￹列￺れつ￻: ￹音￺おん￻とおなじキーのシフト￹側￺がわ￻(Aがシフト￹側￺がわ￻ならノーマル￹側￺がわ￻)をタイプ
* C￹列￺れつ￻: ￹表￺ひょう￻のかなをタイプ

たとえば、￹動詞￺どうし￻の￹音￺おん￻が「き」であれば、

* \ き → 着
* \ 〔Shift〕-き → 切

のようにして、￹漢字￺かんじ￻をちょくせつ￹入力￺にゅうりょく￻できます。

**￹補足￺ほそく￻**:  「￹生￺う￻む」と「￹産￺う￻む」などは、もともとの￹和語￺わご￻はおなじものです。
ひらがなで「うむ」とかいてあれば￹意味￺いみ￻はわかります。
ほんとうに￹意味￺いみ￻の￹判別￺はんべつ￻しにくい￹和語￺わご￻の一￹音￺おん￻の￹動詞￺どうし￻というのは、それほどおおくはないようです。

## 「ひらがなIME」のプログラム

　「ひらがなIME」のプログラムは、すべて￹Python￺バイソン￻でかいてあります。プログラムの￹行数￺ぎょうすう￻は、￹約￺やく￻1,500￹行￺ぎょう￻(v0.6.0)です。

## ￹参考￺さんこう￻￹文献￺ぶんけん￻

　「ひらがなIME」は、￹梅棹￺うめさお￻￹忠夫￺ただお￻さんの￹著書￺ちょしょ￻のような、￹漢字￺かんじ￻のすくない￹日本語￺にほんご￻の￹文章￺ぶんしょう￻もかきやすいように￹設計￺せっけい￻しています。

- 『[￹知的生産￺ちてきせいさん￻の￹技術￺ぎじゅつ￻](https://www.iwanami.co.jp/book/b267410.html)』, ￹梅棹￺うめさお￻￹忠夫￺ただお￻，￹岩波￺いわなみ￻￹新書￺しんしょ￻，1969, 2015(￹改版￺かいはん￻).
- 『[￹日本語￺にほんご￻と￹事務￺じむ￻￹革命￺かくめい￻](http://bookclub.kodansha.co.jp/product?item=0000211818)』, ￹梅棹￺うめさお￻￹忠夫￺ただお￻, くもん選書, 1988, ￹講談￺こうだん￻￹社￺しゃ￻￹学術￺がくじゅつ￻￹文庫￺ぶんこ￻, 2015.

※ 『￹知的生産￺ちてきせいさん￻の￹技術￺ぎじゅつ￻』の2015(￹改版￺かいはん￻)では、￹本文￺ほんぶん￻の￹日本語￺にほんご￻の￹表記法￺ひょうきほう￻が、さらにゆれのすくない￹梅棹￺うめさお￻￹忠夫￺ただお￻￹著作集￺ちょさくしゅう￻とおなじ￹表記法￺ひょうきほう￻にあらためられています。

　￹梅棹￺うめさお￻￹忠夫￺ただお￻さんの￹日本語￺にほんご￻￹表記法￺ひょうきほう￻については、そのルールを￹再￺さい￻￹構築￺こうちく￻してみた￹資料￺しりょう￻を￹用意￺ようい￻しています。あわせて￹参考￺さんこう￻にしてください。
- 「[わたしの日本語表記のルール 2018 v2](https://shiki.esrille.com/2018/05/notation.html)」

